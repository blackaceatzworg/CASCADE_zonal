/**
 * 
 * This file was automatically generated by the Repast Simphony Agent Editor.
 * Please see http://repast.sourceforge.net/ for details.
 * 
 */

/**
 *
 * Set the package name.
 *
 */
package bin.initialmodel

/**
 *
 * Import the needed packages.
 *
 */
import java.io.*
import java.math.*
import java.util.*
import javax.measure.unit.*
import org.jscience.mathematics.number.*
import org.jscience.mathematics.vector.*
import org.jscience.physics.amount.*
import repast.simphony.adaptation.neural.*
import repast.simphony.adaptation.regression.*
import repast.simphony.context.*
import repast.simphony.context.space.continuous.*
import repast.simphony.context.space.gis.*
import repast.simphony.context.space.graph.*
import repast.simphony.context.space.grid.*
import repast.simphony.engine.environment.*
import repast.simphony.engine.schedule.*
import repast.simphony.engine.watcher.*
import repast.simphony.groovy.math.*
import repast.simphony.integration.*
import repast.simphony.matlab.link.*
import repast.simphony.query.*
import repast.simphony.query.space.continuous.*
import repast.simphony.query.space.gis.*
import repast.simphony.query.space.graph.*
import repast.simphony.query.space.grid.*
import repast.simphony.query.space.projection.*
import repast.simphony.parameter.*
import repast.simphony.random.*
import repast.simphony.space.continuous.*
import repast.simphony.space.gis.*
import repast.simphony.space.graph.*
import repast.simphony.space.grid.*
import repast.simphony.space.projection.*
import repast.simphony.ui.probe.*
import repast.simphony.util.*
import simphony.util.messages.*
import static java.lang.Math.*
import static repast.simphony.essentials.RepastEssentials.*

/**
 *
 * This is an agent.
 *
 */
public class ZonalAgent  {

    /**
     *
     * This is an agent property.
     * @field longitude
     *
     */
    @Parameter (displayName = "longitude", usageName = "longitude")
    public float getLongitude() {
        return longitude
    }
    public void setLongitude(float newValue) {
        longitude = newValue
    }
    public float longitude = 0

    /**
     *
     * This is an agent property.
     * @field latitude
     *
     */
    @Parameter (displayName = "latitude", usageName = "latitude")
    public float getLatitude() {
        return latitude
    }
    public void setLatitude(float newValue) {
        latitude = newValue
    }
    public float latitude = 0

    /**
     *
     * This is an agent property.
     * @field initDemand
     *
     */
    @Parameter (displayName = "initDemand", usageName = "initDemand")
    public double getInitDemand() {
        return initDemand
    }
    public void setInitDemand(double newValue) {
        initDemand = newValue
    }
    public double initDemand = 0

    /**
     *
     * This is an agent property.
     * @field prodZone
     *
     */
    @Parameter (displayName = "Zone of Production?", usageName = "prodZone")
    public boolean getProdZone() {
        return prodZone
    }
    public void setProdZone(boolean newValue) {
        prodZone = newValue
    }
    public boolean prodZone = 0

    /**
     *
     * This is an agent property.
     * @field mkkup
     *
     */
    @Parameter (displayName = "Mark Up", usageName = "mkkup")
    public double getMkkup() {
        return mkkup
    }
    public void setMkkup(double newValue) {
        mkkup = newValue
    }
    public double mkkup = 0.1

    /**
     *
     * This is an agent property.
     * @field job
     *
     */
    @Parameter (displayName = "job", usageName = "job")
    public double getJob() {
        return job
    }
    public void setJob(double newValue) {
        job = newValue
    }
    public double job = 0.0001

    /**
     *
     * This is an agent property.
     * @field pry
     *
     */
    @Parameter (displayName = "pry", usageName = "pry")
    public double getPry() {
        return pry
    }
    public void setPry(double newValue) {
        pry = newValue
    }
    public double pry = 0

    /**
     *
     * This is an agent property.
     * @field price
     *
     */
    @Parameter (displayName = "price", usageName = "price")
    public double getPrice() {
        return price
    }
    public void setPrice(double newValue) {
        price = newValue
    }
    public double price = 0

    /**
     *
     * This is an agent property.
     * @field pop
     *
     */
    @Parameter (displayName = "Population", usageName = "pop")
    public double getPop() {
        return pop
    }
    public void setPop(double newValue) {
        pop = newValue
    }
    public double pop = 0

    /**
     *
     * This is an agent property.
     * @field miso
     *
     */
    @Parameter (displayName = "Micro Solar", usageName = "miso")
    public double getMiso() {
        return miso
    }
    public void setMiso(double newValue) {
        miso = newValue
    }
    public double miso = 0.1

    /**
     *
     * This is an agent property.
     * @field maso
     *
     */
    @Parameter (displayName = "Macro Solar", usageName = "maso")
    public double getMaso() {
        return maso
    }
    public void setMaso(double newValue) {
        maso = newValue
    }
    public double maso = 0.1

    /**
     *
     * This is an agent property.
     * @field miw
     *
     */
    @Parameter (displayName = "Micro Wind", usageName = "miw")
    public double getMiw() {
        return miw
    }
    public void setMiw(double newValue) {
        miw = newValue
    }
    public double miw = 0.1

    /**
     *
     * This is an agent property.
     * @field maw
     *
     */
    @Parameter (displayName = "Macro Wind", usageName = "maw")
    public double getMaw() {
        return maw
    }
    public void setMaw(double newValue) {
        maw = newValue
    }
    public double maw = 0.1

    /**
     *
     * This is an agent property.
     * @field windy
     *
     */
    @Parameter (displayName = "How windy?", usageName = "windy")
    public double getWindy() {
        return windy
    }
    public void setWindy(double newValue) {
        windy = newValue
    }
    public double windy = 0

    /**
     *
     * This is an agent property.
     * @field sun
     *
     */
    @Parameter (displayName = "How Sunny?", usageName = "sun")
    public double getSun() {
        return sun
    }
    public void setSun(double newValue) {
        sun = newValue
    }
    public double sun = 0

    /**
     *
     * This is an agent property.
     * @field attso
     *
     */
    @Parameter (displayName = "Attractivity of solar", usageName = "attso")
    public double getAttso() {
        return attso
    }
    public void setAttso(double newValue) {
        attso = newValue
    }
    public double attso = 0

    /**
     *
     * This is an agent property.
     * @field attw
     *
     */
    @Parameter (displayName = "Attractivity of wind", usageName = "attw")
    public double getAttw() {
        return attw
    }
    public void setAttw(double newValue) {
        attw = newValue
    }
    public double attw = 0

    /**
     *
     * This is an agent property.
     * @field dmiso
     *
     */
    @Parameter (displayName = "Delta micro solar with delta t", usageName = "dmiso")
    public double getDmiso() {
        return dmiso
    }
    public void setDmiso(double newValue) {
        dmiso = newValue
    }
    public double dmiso = 0

    /**
     *
     * This is an agent property.
     * @field dmaw
     *
     */
    @Parameter (displayName = "Delta macro wind with delta t", usageName = "dmaw")
    public double getDmaw() {
        return dmaw
    }
    public void setDmaw(double newValue) {
        dmaw = newValue
    }
    public double dmaw = 0

    /**
     *
     * This is an agent property.
     * @field dmiw
     *
     */
    @Parameter (displayName = "Delta micro wind with delta t", usageName = "dmiw")
    public double getDmiw() {
        return dmiw
    }
    public void setDmiw(double newValue) {
        dmiw = newValue
    }
    public double dmiw = 0

    /**
     *
     * This is an agent property.
     * @field dmaso
     *
     */
    @Parameter (displayName = "Delta macro solar with delta t", usageName = "dmaso")
    public double getDmaso() {
        return dmaso
    }
    public void setDmaso(double newValue) {
        dmaso = newValue
    }
    public double dmaso = 0

    /**
     *
     * This value is used to automatically generate agent identifiers.
     * @field serialVersionUID
     *
     */
    private static final long serialVersionUID = 1L

    /**
     *
     * This value is used to automatically generate agent identifiers.
     * @field agentIDCounter
     *
     */
    protected static long agentIDCounter = 1

    /**
     *
     * This value is the agent's identifier.
     * @field agentID
     *
     */
    protected String agentID = "ZonalAgent " + (agentIDCounter++)

    /**
     *
     * This is the step behavior.
     * @method step
     *
     */
    @ScheduledMethod(
        start = 1d,
        interval = 1d,
        shuffle = false
    )
    public def step() {

        // Define the return value variable.
        def returnValue

        // Note the simulation time.
        def time = GetTickCountInTimeUnits()

        // This is a task.
        double delt = GetParameter("delt");
        this.setAttso( exp(1+0.5*this.getSun()));
        this.setAttw( exp(1+0.5*this.getWindy())) ;     
        // In original model, order important - need to sum attw and attso across all agents after this step for the lines below
        // involving the Investor Agent re macro solar and wind
        this.setDmiso( GetParameter("gs")*(this.getSun()*1.1 -1)*(this.getPop()/this.getMiso() -1)*(1 + 0.05*this.getMiso()));
        // people taking up solar, fraction of houses without, suitable, owned, roof area. R ROC for households
        this.setDmiw( GetParameter("gw")*(this.getWindy()*1.025 -1)*(this.getPop()/this.getMiw() - 1)*(1 + 0.05*this.getMiw()));
                         //people adopting micro wind
        this.setMiso( this.getMiso() + this.getDmiso()*delt);
        this.setMiw( this.getMiw() + this.getDmiw()*delt);
        InvestorAgent myInvestor = FindContext("initialModel").getObjects(InvestorAgent).get(0);  // a hack as we have only one, so no network
        this.setDmaso( myInvestor.getInvso()*this.getAttso()/myInvestor.getSumattso());
        this.setDmaw( myInvestor.getInvw()*this.getAttw()/myInvestor.getSumattw());
        this.setMaso( this.getMaso() + this.getDmaso()*delt);
        this.setMaw( this.getMaw() + this.getDmaw()*delt);
        // Return the results.
        return returnValue

    }

    /**
     *
     * This method provides a human-readable name for the agent.
     * @method toString
     *
     */
    @ProbeID()
    public String toString() {

        // Define the return value variable.
        def returnValue

        // Note the simulation time.
        def time = GetTickCountInTimeUnits()

        // Set the default agent identifier.
        returnValue = this.agentID
        // Return the results.
        return returnValue

    }


}

